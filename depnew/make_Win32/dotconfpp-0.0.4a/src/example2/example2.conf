#
# dotconf++ example
# comment
#
#
; another comment type

#single value
Parameter   value

#Multiline parameter
MultilineText id1 "Quick brown \
fox jumps...\
 bla bla bla"

#include other config file
DOTCONFPPIncludeFile ${PWD}/modules.conf

#Multiline with '=' and quotes and line-terminators inside
Parameter2 = value2 "this program is \"dot conf-like\"" "new line starts\nhere"

#another multiline
CustomLog /usr/local/apache-ssl/logs/ssl_request_log \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

# with quotes and substitution from environment and from config
LogOptions "/var/log/mailog -s" 1024 ${TEMP_PATH:-"/tmp/default_temp_path"} ${PWD:-/tmp}/log.conf_${USER}

LogFile ${TEMP_PATH:-"/tmp/default temp path"}

#with spaces
LogFile "${PWD:-/var/log}/maillog with spaces"

#substitution is perfomed after parsing, so we can define variable after using it as macro
TEMP_PATH = /tmp/temp_path

#all on one line
<SectionTag allOnOneLine> onLineParameter=onLineValue </SectionTag>

#tag
<SectionTag tagValue tagValue2>
    inTagParameter "disabled if opened" # another comment
</SectionTag>

#nested tags
<SectionTag tagValue>

   TagEnable #parameter without value

   <SubSection  SubsectionName>
      subsectionParameterDisabled Yes; comment
      subsectionParameter2Disabled No
   </SubSection>

</SectionTag>

<LogCategory 0 "authentication">

   <Store mysql>
      mysql_db = "outpost"
      mysql_table = "log"
   </Store>

</LogCategory>

<LogCategory 1 "maillog">

   <Store default>
      file = ${HOME}/maillog
   </Store>

</LogCategory>

